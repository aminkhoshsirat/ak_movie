# Generated by Django 4.1 on 2024-07-11 14:02

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_jalali.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutherModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='blog/auther/profiles')),
                ('url', models.SlugField(allow_unicode=True, unique=True)),
                ('live_in', models.TextField()),
                ('date_joined', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('telegram_link', models.URLField()),
                ('instagram_link', models.URLField()),
                ('twitter_link', models.URLField()),
                ('post', models.CharField(max_length=1000)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('image', models.ImageField(upload_to='blog/category_image')),
                ('url', models.SlugField(allow_unicode=True, unique=True)),
                ('description', models.TextField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogKeyWordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('url', models.SlugField(allow_unicode=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10000)),
                ('image', models.ImageField(upload_to='blog/image')),
                ('description', models.TextField()),
                ('url', models.SlugField(allow_unicode=True, unique=True)),
                ('published_date', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('update_date', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('read_time', models.CharField(max_length=250)),
                ('conclusion', models.TextField()),
                ('text', ckeditor.fields.RichTextField()),
                ('active', models.BooleanField(default=True)),
                ('auther', models.ManyToManyField(related_name='auther_blogs', to='blog.authermodel')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='category_blogs', to='blog.blogcategorymodel')),
                ('keyword', models.ManyToManyField(related_name='blog_keywords', to='blog.blogkeywordmodel')),
            ],
        ),
        migrations.CreateModel(
            name='BlogViewModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
                ('date_view', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_view', to='blog.blogmodel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_blog_view', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogLikeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=False)),
                ('dislike', models.BooleanField(default=False)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_likes', to='blog.blogmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_blog_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogCommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('published_date', django_jalali.db.models.jDateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=False)),
                ('admin_seen', models.BooleanField(default=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to='blog.blogmodel')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_child', to='blog.blogcommentmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_blog_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AutherFollowingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auther', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auther_following', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
